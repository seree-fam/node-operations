services:
  execution:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - execution-data:/data
      - executionlogs:/rethlogs
      - ./jwt.hex:/jwt.hex
      - ./start.sh:/start.sh:rw
    ports:
      - '8545:8545'
      - '8546:8546'
      - '8551:8551'
      - '9001:9001'  # Execution metrics
      - '30303:30303'
      - '30303:30303/udp' #peer discovery
    healthcheck:
      test: >
        /bin/sh -c '
        response=$$(curl -s -X POST -H "Content-Type: application/json" --data "{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":1}" http://localhost:8545) &&
        if echo "$$response" | grep -q "false"; then
          curl -s -X POST -H "Content-Type: application/json" --data "{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}" http://localhost:8545 |
          grep -q "0x[0-9a-f]" && exit 0;
        fi &&
        exit 1'
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    command: /start.sh

  consensus:
    image: sigp/lighthouse:latest
    container_name: lighthouse-sepolia
    restart: always
    ports:
      - "9000:9000/tcp"     # P2P TCP
      - "9000:9000/udp"     # P2P UDP
      - "5052:5052"         # HTTP API
      - "9100:9100"         # Consensus metrics
      - "5064:5064"
    volumes:
      - lighthouse-data:/data
      - ./jwt.hex:/jwt.hex:ro  # Added read-only flag
    depends_on:
      execution:
        condition:
          service_healthy
    command: >
      lighthouse bn
        --network sepolia
        --datadir /data
        --execution-endpoint http://execution:8551
        --execution-jwt /jwt.hex
        --checkpoint-sync-url https://checkpoint-sync.sepolia.ethpandaops.io
        --http
        --http-address 0.0.0.0
        --metrics
        --metrics-address 0.0.0.0
        --metrics-port 9100
        --port 9000
        --target-peers 50
        --boot-nodes "enr:-KG4QE5OIg5ThTjkzrlVF32WT_-XT14WeJtIz2zoTqLLjQhYAmJlnk4ItSoH41_2x0RX0wTFIe5GgjRzU2u7Q1fN4vADhGV0aDKQqP7o7pAAAHAyAAAAAAAAAIJpZIJ2NIJpcISlFsStiXNlY3AyNTZrMaEC-Rrd_bBZwhKpXzFCrStKp1q_HmGOewxY3KwM8ofAj_ODdGNwgiMog3VkcIIjKA"

  # Observability metrics
  prometheus:
    restart: always
    image: prom/prometheus
    user: root
    depends_on:
      - consensus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheusdata:/prometheusdata
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheusdata'

  grafana:
    restart: always
    image: grafana/grafana
    user: '472'
    depends_on:
      - consensus
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafanadata
      - ./grafana/provisioning/:/etc/grafana/provisioning/


volumes:
  execution-data:
    driver: local
  executionlogs:
    driver: local
  lighthouse-data:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
