services:
  execution:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - execution-data:/data
      - executionlogs:/rethlogs
      - ./jwt.hex:/jwt.hex
    ports:
      - '8545:8545'
      - '8546:8546'
      - '8551:8551'
      - '9001:9001'  # Execution metrics
    healthcheck:
      test: >
        /bin/sh -c '
        response=$$(curl -s -X POST -H "Content-Type: application/json" --data "{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":1}" http://localhost:8545) &&
        if echo "$$response" | grep -q "false"; then
          curl -s -X POST -H "Content-Type: application/json" --data "{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}" http://localhost:8545 |
          grep -q "0x[0-9a-f]" && exit 0;
        fi &&
        exit 1'
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    command: >
      ./reth/target/release/reth node
      --chain sepolia
      --datadir /data
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --metrics 0.0.0.0:9001
      --authrpc.jwtsecret /jwt.hex
      --authrpc.addr 0.0.0.0
      --authrpc.port 8551

  consensus:
    image: sigp/lighthouse:latest
    container_name: lighthouse-sepolia
    restart: unless-stopped
    ports:
      - "9000:9000"     # P2P port
      - "5052:5052"     # HTTP API
      - "9100:9100"     # Consensus metrics
    volumes:
      - lighthouse-data:/data
      - ./jwt.hex:/jwt.hex
    depends_on:
      execution:
        condition:
          service_healthy

    command: >
      lighthouse bn
      --network sepolia
      --datadir /data
      --execution-endpoint http://execution:8551
      --execution-jwt /jwt.hex
      --checkpoint-sync-url https://sepolia.beaconstate.info
      --http
      --http-address 0.0.0.0
      --metrics
      --metrics-address 0.0.0.0
      --metrics-port 9100
      --port 9000

  # Observability metrics
  prometheus:
    restart: always
    image: prom/prometheus
    user: root
    depends_on:
      - consensus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheusdata:/prometheusdata
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheusdata'

  grafana:
    restart: always
    image: grafana/grafana
    user: '472'
    depends_on:
      - consensus
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafanadata
      - ./grafana/provisioning/:/etc/grafana/provisioning/


volumes:
  execution-data:
    driver: local
  executionlogs:
    driver: local
  lighthouse-data:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
